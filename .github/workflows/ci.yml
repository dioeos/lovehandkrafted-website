name: Development

on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types:
      - opened
      - edited
      - synchronize
      - reopened

jobs:
  backend-tests:
    name: Django Tests
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      POSTGRES_DB_NAME: test_db
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      RESEND_SMTP_FROM_EMAIL: ${{ secrets.RESEND_SMTP_FROM_EMAIL }}
      RESEND_SMTP_SERVER_EMAIL: ${{ secrets.RESEND_SMTP_SERVER_EMAIL }}

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show workspace
        run: |
          pwd
          ls -R .
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for Postgres..."
            sleep 1
          done

      - name: Run migration & tests
        working-directory: backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        run: |
          python manage.py migrate --no-input
          python manage.py test apps.authentication --verbosity=2
          python manage.py test apps.products --verbosity=2
          python manage.py test apps.newsletter --verbosity=2
